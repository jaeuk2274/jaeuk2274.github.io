급상여계산
main(errbuf            OUT NOCOPY VARCHAR2
,retcode           OUT NOCOPY NUMBER
,p_paycd           VARCHAR2 DEFAULT NULL -- 10 급여 30 경영성과금
,p_paydat          DATE DEFAULT NULL -- 지급일자
,p_paymth          VARCHAR2 DEFAULT NULL -- 귀속년월
,p_compycd         VARCHAR2 DEFAULT '1000' 
,p_deptcd          VARCHAR2 DEFAULT NULL 
,p_include_subdept VARCHAR2 DEFAULT NULL
,p_jikjgcd         VARCHAR2 DEFAULT NULL
,p_jikgubcd        VARCHAR2 DEFAULT NULL
,p_regulargb       VARCHAR2 DEFAULT NULL
,p_paydiv          VARCHAR2 DEFAULT NULL
,p_emp_id          NUMBER DEFAULT NULL
,p_pay_rate        NUMBER DEFAULT NULL
,p_pay_amount      NUMBER DEFAULT NULL
,p_tax_from        VARCHAR2 DEFAULT NULL
,p_tax_to          VARCHAR2 DEFAULT NULL
,p_duty_from       DATE DEFAULT NULL
,p_duty_to         DATE DEFAULT NULL
,p_tax_cal         VARCHAR2 DEFAULT 'N' 세액계산여부 Y
,p_tax_subrate     NUMBER DEFAULT 0)



    TYPE       my_curs_type is REF CURSOR;
    curs       my_curs_type;
    curs_str   VARCHAR2(3000);
    l_deptnm   VARCHAR2(100);
    l_cal_id   NUMBER;
    l_7b_amt   NUMBER;
    l_temp_9a  NUMBER;
    tsStartTime TIMESTAMP;


    IF g_calc_module IS NULL THEN
      g_calc_module := 'REAL_PAY'; -- 급여면 , 소급이면 RETA..
      g_req_type    := 'PAY_CALC';

    END IF;

write_log('급상여계산일시 : '||TO_CHAR(sysdate, 'RRRR-MM-DD HH24:MI:SS'));
write_log('');
write_log('계산조건 - 급상여구분 : '||IS_PAY_COMMON.PAYNM(p_paycd));

G101	00	급여상여	급여,분기,명절,성과상여금을 의미함
G101	10	급여	BVK
G101	20	정기상여	기본급+직능급+근속급+직책수당+중식비의 400%(1/4/7/10월 각 100%)
G101	21	기본상여	기본급+직능급+근속급+직책수당+중식비의 200%(2/8월 각 100%)
G101	22	월동비	기본급+직능급+근속급+직책수당+중식비의 100%(11월)
G101	23	체력단련비	기본급+직능급+근속급+직책수당+중식비의 100%(5월)
G101	24	명절상여	설, 추석 5일 전 지급(정액 500,000원)
G101	30	경영성과금	기본급+직능급+근속급+직책수당+중식비의 0~400%(3/6/9/12월)
G101	50	임원성과연봉	BVK
G101	60	소급분	
G101	68	영업활동비	부서장활동비 셋팅 동일
G101	69	현장활동비	직책활동비 셋팅 동일
G101	71	부서장활동비	BVK
G101	74	경영성과금_2	
G101	75	상무보성과연봉	
G101	76	직책활동비	
G101	77	특별격려금	
G101	78	업무추진비	
G101	80	기타소득	구_포상금(2013.06.10)
G101	81	근속포상	
G101	82	기술기여금	
G101	83	인정상여	
G101	84	숙소지원금	
G101	85	학자금	
G101	86	스마트폰지원금	
G101	89	장려금	2014-10-02 추가
G101	91	근속포상_2	
G101	92	퇴직포상	
G101	921	교육수당	
G101	922	노사상생수당	
G101	93	전문자격포상	
G101	94	재외수당	
G101	95	교육지원금	
G101	96	임원포상	
G101	97	기타포상금	
G101	98	임원장기인센티브	
G101	999	임원활동비	BVK
G101	A1	퇴직금	
G101	G1	연차충당	
G101	G2	퇴직충당(IFRS)	
G101	G3	퇴직충당(KGAPP)	
G101	X1	공탁	압류등록에서 사용
     
write_log('계산조건 - 지급일자 : '||TO_CHAR(p_paydat,'RRRR-MM-DD'));
write_log('계산조건 - 귀속년월 : '||p_paymth);


write_log('계산조건 - 부서 : '||l_deptnm);
write_log('계산조건 - 하위조직포함 : '||p_include_subdept);
write_log('계산조건 - 직급 : '||IS_FUNC.CODENM('E104', p_paydiv));
write_log('계산조건 - 직군 : '||IS_FUNC.CODENM('E108', p_paydiv));
write_log('계산조건 - 급여형태 : '||IS_FUNC.CODENM('E106', p_paydiv));
write_log('계산조건 - 사번 : '||IS_FUNC.EMPCD(p_emp_id)||' '||IS_FUNC.HNAME(p_emp_id));


코드, 지급일자, 귀속년월, 사업장 유효성검사

격려금의 겨우 세금계산기간 넣지 않으면 세금계산 x
20, 30, 50

세금계산기간 유효성검사

지급율, 지급액 유효성검사

지급률, 지급액 둘중하나

write_log('계산조건 - 지급율 : '||p_pay_rate);
write_log('계산조건 - 지급액 : '||p_pay_amount);
write_log('계산조건 - 세액계산기간 : '||p_tax_from||'-'||p_tax_to);

상여계산기간 있으면 
write_log('계산조건 - 상여계산기간 : '||TO_CHAR(p_duty_from,'RRRR-MM-DD')||'-'||TO_CHAR(p_duty_to,'RRRR-MM-DD'));

write_log('계산조건 - 세액계산여부 : '||p_tax_cal);
write_log('계산조건 - 세액감액율 : '||nvl(p_tax_subrate,0)||'%');


## 1. 통상시급을 구하기 위한 소정 근무시간 Setting
g_reg_time := to_number(is_duty_common.common_value('REGULAR_WORK_TIME')); 

    select *
    --  into l_value
      from is_sy03
     where name = upper('REGULAR_WORK_TIME')
       and type = 'GUNTAE'
       and org_id = is_func.org_id;
       
81	GUNTAE	REGULAR_WORK_TIME	184	소정근로시간


## 2. get_date_period; --급여계산기간  

SELECT VALUE$
INTO l_date_ftemp
FROM IS_SY03
WHERE NAME = 'BONUS_DILIGENCE_FROM'
AND TYPE = 'GUNTAE'
AND ORG_ID = 81;

급여기간
81	GUNTAE	BONUS_DILIGENCE_FROM	-1,16	급/상여시작일

SELECT VALUE$
INTO l_date_ttemp
FROM IS_SY03
WHERE NAME = 'BONUS_DILIGENCE_TO'
AND TYPE = 'GUNTAE'
AND ORG_ID = 81;

81	GUNTAE	BONUS_DILIGENCE_TO	0,15	급/상여종료일


IF (l_date_ftemp IS NOT NULL) THEN
l_date_fm := SUBSTR(l_date_ftemp, 1, INSTR(l_date_ftemp, ',') - 1); -- -1
l_date_fd := SUBSTR(l_date_ftemp, INSTR(l_date_ftemp, ',') + 1); -- 16
-- (귀속년월)저번달 마지막날 < 16
IF TO_CHAR(LAST_DAY(ADD_MONTHS(to_date(p_dutymth, 'yyyymm'), l_date_fm)), 'DD') < l_date_fd 
THEN
  p_date_from := LAST_DAY(ADD_MONTHS(to_date(p_dutymth, 'yyyymm'), l_date_fm));
ELSE
  p_date_from := TO_DATE(TO_CHAR(ADD_MONTHS(to_date(p_dutymth, 'yyyymm'), l_date_fm), 'YYYYMM') || 
                LTRIM(TO_CHAR(l_date_fd, '00')), 'YYYYMMDD'); -- (귀속년월)저번달 || 16
END IF;

IF (l_date_ttemp IS NOT NULL) THEN
l_date_tm := SUBSTR(l_date_ttemp, 1, INSTR(l_date_ttemp, ',') - 1); -- 0
l_date_td := SUBSTR(l_date_ttemp, INSTR(l_date_ttemp, ',') + 1); -- 15
-- (귀속년월)현재달 마지막날 < 15
IF TO_CHAR(LAST_DAY(ADD_MONTHS(to_date(p_dutymth, 'yyyymm'), l_date_tm)), 'DD') < l_date_td 
THEN
  p_date_to := LAST_DAY(ADD_MONTHS(to_date(p_dutymth, 'yyyymm'), l_date_tm));
ELSE
  p_date_to := TO_DATE(TO_CHAR(ADD_MONTHS(to_date(p_dutymth, 'yyyymm'), l_date_tm), 'YYYYMM') ||
               LTRIM(TO_CHAR(l_date_td, '00')), 'YYYYMMDD'); (귀속년월) || 15
END IF;

근태
저번달 16 ~ 이번달 15일 기준.

전월 급여기간도 구해놓는다.
g_prev_paymth := to_char(add_months(to_date(g_paymth,'rrrrmm'),-1),'RRRRMM');
is_month_common.bonus_period(g_prev_paymth, g_prev_pay_date_from, g_prev_pay_date_to);

g_prev_pay_date_from
g_prev_pay_date_to


  -- 일할계산 기준일
  g_day_per_monthly        NUMBER := TO_NUMBER(IS_PAY_COMMON.COMMON_VALUE('DAY_PER_MONTHLY')); -- 30

SELECT VALUE$
INTO l_value
FROM IS_SY03
WHERE NAME = upper('DAY_PER_MONTHLY')
AND TYPE = 'PAY'
AND ORG_ID = is_func.org_id;

81	PAY	DAY_PER_MONTHLY	30	일할계산 기준일


## 3. get_fixed_reg_type

CURSOR CS_REG_TYPE IS
SELECT REG_TYPE, MASTER_COLUMN
FROM IS_PY33
WHERE ENABLED = 'Y'
AND ORG_ID = g_org_id
ORDER BY PRECEDE_NUM;

개인별	EMP_ID
직책별	JIKCKCD
호칭별	JIKGUBCD

1	개인별	EMP_ID		Y	IS_PE01_V PER	PER.EMPCD	사번	        0.8	    PER.HNAME	    성명	        1.5	PER.DEPTCD_DISP	부서	2				TO_CHAR(PER.EMP_ID)			5	WHERE 1=1 ORDER BY PER.EMPCD
2	직책별	JIKCKCD		Y	IS_SY02 S	    S.CODEID	직책코드	  0.8	S.DESCRIPTION	직책코드명	    1.5										1	WHERE S.CODETP = 'E102' ORDER BY S.CODETP
3	호칭별	JIKGUBCD	Y	IS_SY02 S	    S.CODEID	호칭코드	  0.8	S.DESCRIPTION	호칭명	        1.5										1	WHERE S.CODETP = 'E104' ORDER BY S.CODETP

FOR C IN CS_REG_TYPE LOOP
  l_array := l_array + 1;
  reg_type(l_array).REG_TYPE := C.REG_TYPE;
  reg_type(l_array).MASTER_COLUMN := C.MASTER_COLUMN;
END LOOP;


## 4. 
    curs_str := get_curs_str(p_paymth
                            ,p_compycd
                            ,p_deptcd
                            ,p_include_subdept
                            ,p_jikjgcd
                            ,p_jikgubcd
                            ,p_regulargb
                            ,p_paydiv
                            ,p_emp_id);
                            
                            
l_7_day    DATE := last_day(add_months(to_date(g_paymth || '05', 'YYYYMMDD'), -1));
-> 바꿔도 될 거 같음. 전달 마지막날짜만 구함.
l_7_day    DATE := last_day(add_months(to_date(g_paymth, 'YYYYMM'), -1));
전달 마지막 날짜. 


l_ret_bns_st_date := add_months(g_pay_date_to,-1);
19.12.15   20.01.15

l_curs_str := 'SELECT * FROM IS_PE01 ';

2010 안씀
3010 안씀

g_pay_date_to = 20.01.15
40 격려금
1. 급여형태 인턴이고
2. 입사일자가 급여기간(20.01.15) 전
3. 퇴사일자가 급여기간(20.01.15) 이후 존재하면

l_curs_str := l_curs_str || 'WHERE  IGENTDAT <= ''' || g_pay_date_to || '''' ||
            'AND PAYDIV <> ''90''' || -- 인턴
            'AND  (RETDAT IS NULL OR RETDAT >= ''' || g_pay_date_to ||

IGENTDAT -> 입사일자
PAYDIV -> 급여형태(E106)
RETDAT -> 퇴사일자

E106	05	시급제			N
E106	10	월정액	2013.04.12 월급제 => 월정액		Y
E106	20	연봉제(직원)			Y
E106	30	연봉제(임원)			Y
E106	40	호봉제			Y
E106	70	연봉제(계약직)			N
E106	90	인턴(계약직)			N
E106	99	미지급			N



--통신비(75)       5일기준 재중인 직원
..? 75 어디서 따로 주는건지...  75코드 현재 상무보성과연봉임..


76 직책활동비
ELSIF g_paycd IN ('76') THEN
  l_curs_str := l_curs_str || 'WHERE  IGENTDAT <= ''' || g_pay_date_to || '''' ||
                'AND PAYDIV <> ''30''' ||
                'AND (RETDAT IS NULL OR RETDAT > ''' || l_7_day ||
                ''')';

1. 급여형태 연봉제(임원)이 아니고
2. 입사일자가 급여기간(20.01.15) 전
3. 퇴사일자가 전달 마지막 날짜(19.12.31)보다 크면. 이번달 퇴사면 안줌.


-- 2017.03.29 추가 69 공사파견활동비 ( 76 =  직책활동비랑 동일 )
ELSIF g_paycd IN ('69') THEN
  l_curs_str := l_curs_str || 'WHERE  IGENTDAT <= ''' || g_pay_date_to || '''' ||
                'AND PAYDIV <> ''30''' ||
                'AND (RETDAT IS NULL OR RETDAT > ''' || l_7_day ||
                
-- TODO 해당 두개합쳐도 무방 합침.

-- TODO 70 현재 존재안함.
ELSIF g_paycd IN ('50', '70') THEN
--임원성과연봉,임원활동비
l_curs_str := l_curs_str || 'WHERE  IGENTDAT <= ''' || g_pay_date_to || '''' ||
            'AND  (RETDAT IS NULL OR RETDAT >= ''' || g_paydat ||
            ''')' || 'AND PAYDIV = ''30'''
             ;

1. 급여형태 연봉제(임원)이 아니고
2. 입사일자가 급여기간(20.01.15) 전
3. 퇴사일자가 g_paydat(20.01.01) 이번달 이상이면.

기타
    ELSE
      l_curs_str := l_curs_str || 'WHERE  (IGENTDAT <= ''' || g_pay_date_to || '''' ||
                    'OR (paydiv = ''30'' AND TO_CHAR(IGENTDAT,''YYYYMM'')=''' ||
                    g_paymth || ''' ' || '))' ||
                    'AND    (RETDAT IS NULL OR (RETDAT BETWEEN ''' ||
                    g_pay_date_from || ''' AND ''' || g_pay_date_to ||
                    ''' ) OR (RETDAT > ''' || g_pay_date_to || ''') )';
    END IF;
    
나머지 전부 (급여.. 경영성과금.. 등)    
1. 입사일자가 급여기간(20.01.15) 전  이거나 연봉제(임원)인데 + 입사월이 귀속년월일때. 
2. 퇴직일자 없거나, 
또는 퇴직일자 BETWEEN 19.12.16 ~ 20.01.15 사이인경우 
또는 20.01.15 이후 퇴직이거나.

-> 퇴직일자가 19.12.16 이후 

만약 

REGULARGB - 사원그룹   
(파견직 제외) NOT IN (''299'',''61'') // 파견직, 용역직
파견간데서 월급줌.

E108	11	임원	임원	1	Y
E108	12	상임고문			N
E108	121	전문직	테스트		Y
E108	13	비상임고문			N
E108	14	연봉계약직(임원)	임원	2	Y
E108	141	비상근연봉계약직(상무보)	직원	3	Y
E108	15	계약직(상무보)	계약직	4	Y
E108	21	연봉제	직원	5	Y
E108	22	월급제	직원	7	Y
E108	23	별정직	직원	6	Y
E108	24	P직군	직원	5	Y
E108	25	E직군	직원	6	Y
E108	299	파견직	계약직	14	Y
E108	31	계약직(기술)	계약직	8	Y
E108	32	계약직(사무)	계약직	9	Y
E108	33	계약직(기술)	계약직	10	N
E108	34	계약직(지원)	계약직	11	N
E108	35	계약직(재채용)	계약직	8	Y
E108	41	촉탁직		15	Y
E108	51	임시직	임시직	12	Y
E108	52	인턴(기간제)	임시직	10	Y
E108	53	시간제근로자	임시직	13	Y
E108	54	인턴(사무)	임시직	10	Y
E108	55	인턴(기술)	임시직	10	Y
E108	61	용역직			N

JIKGUBCD - 역할등급(E104)  
E104	01	대표이사			Y
E104	02	부사장			Y
E104	03	전무			Y
E104	04	상무 			Y
E104	05	전무이사			Y
E104	06	상무이사			Y
E104	07	사장보좌역			Y
E104	08	상무보			Y
E104	09	고문			Y
E104	10	임원			Y
E104	11	Associates			N
E104	12	Managerial			Y
E104	13	Professional			Y
E104	21	P4		7	Y
E104	22	P3		8	Y
E104	23	P2		9	Y
E104	24	P1		10	Y
E104	25	이사보			N
E104	26	P5	2015-03-16 신규생성	6	Y
E104	27	P6	2015-03-16 신규생성	5	Y
E104	28	P7	2015-03-16 신규생성	4	Y
E104	29	P8	2015-03-16 신규생성	3	Y
E104	30	P9	2015-03-16 신규생성	2	Y
E104	31	P11	2015-03-17 신규생성	1	Y
E104	32	E7	 2017-04-01 생성 	11	Y
E104	33	E6	 2017-04-01 생성 	12	Y
E104	34	E5	 2017-04-01 생성 	13	Y
E104	35	E4	 2017-04-01 생성 	14	Y
E104	36	E3	 2017-04-01 생성 	15	Y
E104	37	E2A	 2017-04-01 생성 	16	Y
E104	38	E2B	 2017-04-01 생성 	17	Y
E104	39	E1A	 2017-04-01 생성 	18	Y
E104	40	E1B	 2017-04-01 생성 	19	Y
E104	41	P12	2018-02-21 생성	1	Y
E104	42	E2	2018-03-26 생성	20	Y
E104	43	E1	2018-03-26 생성	21	Y
E104	44	P10	2018-12-28 생성	1	Y


JIKJGCD 직무코드(E105)
너무많아서 Y인것만
E105	110	IT기획직		1	Y
E105	111	PJT기술직		1	Y
E105	112	PJT리더		1	Y
E105	113	PJT마케팅기획직		1	Y
E105	114	PJT지원직		1	Y
E105	115	QSS Master		1	Y
E105	116	간호직		1	Y
E105	117	감사직		1	Y
E105	118	경영기획직		1	Y
E105	119	계약관리직		1	Y
E105	120	계약직		1	Y
E105	121	금형설계관리직		1	Y
E105	122	기계정비직		1	Y
E105	123	소장	2018.12.27 기술연구소장→소장 변경	1	Y
E105	124	내화물제조직		1	Y
E105	125	노무기획직		1	Y
E105	126	노무지원직		1	Y
E105	127	노재기술직		1	Y
E105	128	대표이사 사장		1	Y
E105	129	라임기술직		1	Y
E105	130	라임제조직		1	Y
E105	131	마그네시아생산직		1	Y
E105	132	마케팅기획직		1	Y
E105	133	무보직		1	Y
E105	134	방재기획직		1	Y
E105	135	법무직		1	Y
E105	136	별정직		1	Y
E105	137	본부장		1	Y
E105	138	비서직		1	Y
E105	139	사외이사		1	Y
E105	140	상임감사		1	Y
E105	141	생산기술직		1	Y
E105	142	생산지원직		1	Y
E105	143	설비기술직		1	Y
E105	144	설비직		1	Y
E105	145	실장		1	Y
E105	146	안전 Master		1	Y
E105	147	안전환경기술직		1	Y
E105	148	안전환경기획직		1	Y
E105	149	안전환경직		1	Y
E105	150	연구개발직		1	Y
E105	151	연구기술직		1	Y
E105	152	연구기획직		1	Y
E105	153	연구지원직		1	Y
E105	154	원료직		1	Y
E105	155	유틸리티운전직		1	Y
E105	156	음극재제조직		1	Y
E105	157	인사기획직		1	Y
E105	158	인사지원직		1	Y
E105	159	임시직		1	Y
E105	160	자금직		1	Y
E105	161	자문교수		1	Y
E105	162	자문역		1	Y
E105	163	자재직		1	Y
E105	164	전기정비직		1	Y
E105	165	전문임원		1	Y
E105	166	정비기술직		1	Y
E105	167	제품출하직		1	Y
E105	168	제품판매지원직		1	Y
E105	169	제품판매직		1	Y
E105	170	총괄		1	Y
E105	172	품질검사직		1	Y
E105	173	품질기술직		1	Y
E105	174	품질지원직		1	Y
E105	175	해외법인장		1	Y
E105	176	행정기획직		1	Y
E105	177	행정지원직		1	Y
E105	178	혁신기획직		1	Y
E105	179	현장대리인		1	Y
E105	180	화성기술직		1	Y
E105	181	화성정제직		1	Y
E105	182	화성품판매직		1	Y
E105	183	환경 Master		1	Y
E105	184	회계직		1	Y
E105	185	품질 Master		1	Y
E105	186	품질기획직	2017.05.10 생성	1	Y
E105	187	축로직(A)	2017.05.12 생성	1	Y
E105	188	축로직(B)	2017.05.12 생성	1	Y
E105	189	시설관리직	2017.05.30 생셩	1	Y
E105	190	보좌역	2017.06.13 생성	1	Y
E105	191	공사감독직	2017.09.21 생성	1	Y
E105	192	경영지원직	2017.09.28 생성	1	Y
E105	193	사장	20180221생성	1	Y
E105	194	대표이사	20180221생성	1	Y
E105	195	자재직(A)	20180806 생성	1	Y
E105	196	자재직(B)	20180806 생성	1	Y
E105	197	전구체제조직	2019-03-28생성	1	Y
E105	198	활물질제조직	2019-03-28 생	1	Y
E105	199	통역직	2019-06-27 생성	1	Y
E105	200	교육지원직	2019-10-31 생성		Y
E105	201	기술컨설턴트	2019-10-31 생성	1	Y


COMPYCD 회사코드


부서, 사번 등
존재하면 해당 그것만 돌림.




## 5.
/* 수당기준/공제기준  

    -- 주민세관련 설정
    IS_PAY_COMMON.CRIT_VALUE ( 'SUBTR'
                             , 'TAX_RATE'
                             , 'RESTAX'
                             , g_restax_crit
                             , g_restax );

  -- 수당/공제기준 값 가져오기 [리턴값 : 처리기준(율,금액), 금액/율]
  PROCEDURE crit_value(p_as_class IN VARCHAR2
                      ,p_type     IN VARCHAR2
                      ,p_name     IN VARCHAR2
                      ,p_crit     OUT VARCHAR2
                      ,p_amount   OUT NUMBER) IS
                      
SELECT CRIT, AMOUNT
--    INTO p_crit, p_amount
FROM IS_PY32
WHERE AS_CLASS = 'SUBTR'
AND TYPE = 'TAX_RATE'
AND NAME = 'RESTAX';

RATE	10
81	TAX_RATE	RESTAX	10	주민세 요율

-- 건강보험관련 설정
IS_PAY_COMMON.CRIT_VALUE ( 'SUBTR'
                     , 'FOUR_INSURE'
                     , 'HEALTH_INSUR_EMP'
                     , g_health_insur_crit
                     , g_health_insur );
                             
RATE	3.335
81	FOUR_INSURE	HEALTH_INSUR_EMP	3.335	건강보험 요율 [직원]


   IS_PAY_COMMON.CRIT_VALUE ( 'SUBTR'
                             , 'FOUR_INSURE'
                             , 'HEALTH_OLDMAN_INSUR_EMP'
                             , g_health_old_insur_crit
                             , g_health_old_insur );
                             
81	FOUR_INSURE	HEALTH_OLDMAN_INSUR_EMP	10.25	장기요양보험 요율 [직원]


3개다 안씀/데이터없음 다른데서 쓰는거같음..
    -- 중식비
    IS_PAY_COMMON.CRIT_VALUE ( 'ALLOW'
                             , 'MEAL_PAY'
                             , '9A_MONEY'
                             , g_pay_9a_money_crit
                             , g_pay_9a_money );

    -- 현장수당
    IS_PAY_COMMON.CRIT_VALUE ( 'ALLOW'
                             , 'MEAL_PAY'
                             , '42_MONEY'
                             , g_pay_42_money_crit
                             , g_pay_42_money );
    -- 노조비
    IS_PAY_COMMON.CRIT_VALUE ( 'SUBTR'
                             , 'UNION_CST'
                             , 'UNION_RATE'
                             , g_union_rate_crit
                             , g_union_rate );
                             
## 6. set_calc_information
                             
id 따고

 g_cal_id := is_cal_id.nextval;

    l_record.org_id            := is_func.org_id;
    l_record.cal_id            := g_cal_id;
    l_record.paydat            := p_paydat;
    l_record.paymth            := p_paymth;
    l_record.paycd             := p_paycd;
    l_record.attribute01       := p_compycd;
    l_record.attribute02       := p_deptcd;
    l_record.attribute03       := p_include_subdept;
    l_record.attribute04       := p_jikjgcd;
    l_record.attribute05       := p_jikgubcd;
    l_record.attribute06       := p_regulargb;
    l_record.attribute07       := p_paydiv;
    l_record.attribute08       := p_emp_id;
    l_record.attribute09       := p_pay_rate;
    l_record.attribute10       := p_pay_amount;
    l_record.attribute11       := p_tax_from;
    l_record.attribute12       := p_tax_to;
    l_record.attribute13       := to_char(p_duty_from, 'RRRRMMDD');
    l_record.attribute14       := to_char(p_duty_to, 'RRRRMMDD');
    l_record.attribute15       := p_tax_cal;
    l_record.attribute16       := p_tax_subrate;

    l_record.last_update_date  := SYSDATE;
    l_record.last_updated_by   := -1;
    l_record.creation_date     := SYSDATE;
    l_record.created_by        := -1;
    l_record.last_update_login := NULL;

    INSERT INTO is_py00 VALUES l_record;

g_quater := to_char(to_date(p_paymth || '01', 'RRRRMMDD'), 'Q');
분기도 세팅

레퍼런스 2 참고
급여는 
SELECT s.reference_2
--  INTO g_pay_gubun -- 급여 10 은  A
FROM is_sy02 s
WHERE s.codetp = 'G101'
AND s.codeid = '10'

-- 직능급표
SELECT MAX(jik_month)
--  INTO g_jik_month
FROM is_py26
WHERE jik_month <= '202001'; -- 귀속년월

중식비를 여기서 가져오네.. / 위에거 무쓸모. 
g_9a_amount := bvk_payroll_calculate.return_value ('001', g_paydat);
    
SELECT *
--   INTO l_value
FROM is_sy02 s
WHERE s.codetp = 'G800'; -- 급여수당계산값

G800	003	개인연금(보조금)2019_1	2019_개인연금_1년차_27만원		Y	2019-01-15 오전 10:00:26	1324	2019-01-15 오전 10:00:26	1324	1324	270000
G800	004	개인연금(보조금)2019_2	2019_개인연금_2년차_25만원		Y	2019-01-15 오전 10:00:26	1324	2019-01-15 오전 10:00:26	1324	1324	250000
G800	005	개인연금(보조금)2019_3	2019_개인연금_3년차_22만원		Y	2019-01-15 오전 10:00:26	1324	2019-01-15 오전 10:00:26	1324	1324	220000
G800	006	개인연금(보조금)2019_4	2019_개인연금_4년차_19만원		Y	2019-01-15 오전 10:00:26	1324	2019-01-15 오전 10:00:26	1324	1324	190000
G800	007	개인연금(보조금)2019_5	2019_개인연금_5년차_17만원		Y	2019-01-15 오전 10:00:26	1324	2019-01-15 오전 10:00:26	1324	1324	170000
G800	001	중식비	2012_중식비		Y	2012-05-15 오전 10:22:23	552	2012-05-14 오후 5:48:55	552	552	125000
G800	002	개인연금(보조금)	2012_개인연금		Y	2012-05-14 오후 5:49:44	552	2012-05-14 오후 5:48:55	552	552	55000

-- 소급 아닌경우
    IF    (g_calc_module != 'RETROACT') THEN  
      상여(경영성과금)인경우
      귀속년월이 아닌 상여계산기간을 기준으로 동작
      IF p_paycd = '30' THEN
        is_pay_common.pay_period(to_char(p_duty_to, 'YYYYMM'), g_duty_from_2, g_duty_to_2);
        g_duty_to_2 := add_months(g_duty_to_2, 1);
      END IF;


________ 루프 시작
필터한 사원만큼 반복

get_revision_num## 
소급 아니면
히스토리 제일 최신의 l_revision_num 세팅 1개.
??
-- TODO 가장 최신으로 적용해도 되는지..? 일자 적용 안해도 되는건지 추후 확인.

정보 다 세팅해주고

밑에서 해주네요.. 
근태마감일 기준 정보로 히스토리 읽어서 세팅

   -- 근태마감일 기준 정보로 계산하도록
      SELECT h1.jikgubcd_grade
        INTO emp.jikgubcd_grade
        FROM is_pe01_history h1
       WHERE 1=1
         AND h1.emp_id = emp.emp_id
          AND h1.revision_num = (
                                  SELECT MAX(h.revision_num)
                                    from is_pe01_history h
                                   WHERE 1=1
                                     AND h.emp_id = h1.emp_id
                                     AND h.revision_date <= g_duty_to
                                     );

revision_date 기준 확인


직능자격 - E114
60일경우

퇴사자 급여 기지급여부 체크

마감체크

휴직/징계등의 발령 사항 확인
set_office_order;


30 성과금일경우


나머지
      SELECT COUNT(DISTINCT v$date) v$cnt
        INTO l_cnt
        FROM (SELECT r.*,
                     p.*
                FROM (SELECT * 
                        FROM is_py60
                       WHERE v$date BETWEEN GREATEST(p_duty_from, p_date_from) AND LEAST(p_duty_to, p_date_to)) r,
                     (SELECT p.emp_id,
                             p.baldate,
                             p.bal_section,
                             p.balgb,
                             g.description balgb_disp,
                             p.baldate_from,
                             p.baldate_to,
                             p.description,
                             p.confirm
                        FROM is_pe31 p, -- 발령
                             is_sy02 g
                       WHERE 1 = 1
                         AND substr(p.balgb, 1, 1) IN ('I', 'G') -- I,G 징계 감봉 관련..
                         AND p.balgb       NOT IN ('I18')
                         AND p.emp_id      = p_emp_id
                         AND p.balgb       = g.codeid
                         AND g.reference_5 = 'Y'
                         AND p.confirm     = 'Y'
-- 소급은 UNION으로 덕지덕지 붙어있음.


### 근속기간 계산
calc_cont_period;

40 호봉제 아닌경우
      g_cont_mth := months_between(g_pay_date_from, emp.IGENTDAT);
                        19.12.16, 입사일
호봉제인경우                        
    ELSE
      IF (emp.RETDAT IS NULL) THEN
        g_cont_mth := months_between(g_pay_date_to + 1, emp.IGENTDAT);
      ELSIF (emp.RETDAT >= g_pay_date_to) THEN
        g_cont_mth := months_between(g_pay_date_to + 1, emp.IGENTDAT);
      ELSE
        g_cont_mth := months_between(emp.RETDAT + 1, emp.IGENTDAT);
      END IF;
    END IF;  
    
근속기간     
g_cont_mth                   
      
      
### 근태기간 계산
set_date_period;
                        19.12.16
    IF (emp.IGENTDAT > g_pay_date_from) THEN
      g_date_from := emp.IGENTDAT;
    ELSE
      g_date_from := g_pay_date_from;
    END IF;
                        20.01.15
    IF (emp.RETDAT < g_pay_date_to) THEN
      g_date_to := emp.RETDAT;
    ELSE
      g_date_to := g_pay_date_to;
    END IF;

근태기간
g_date_from ~ g_date_to 

    
###중도 입퇴사 체크
    
퇴사일자가 근태기간 내 있는지 체크
-- TODO ..?
있으면
급여 
1) 해당 근태기간에 하루라도 근무시 통상임금 100%지급하지만 일할계산됨
   적용직군 : 계약직(상무보), 정규직(사무), 정규직(기술), 계약직(사무), 계약직(기술), 계약직(지원)

      SELECT CASE 
               WHEN description LIKE '계약직(사무)' OR 
                    description LIKE '계약직(기술)' OR
                    description LIKE '계약직(재채용)' OR --> 2016-03-31 전용준  이지현씨 요청 추가
                    description LIKE '%임시%' OR 
                    description LIKE '%인턴%' 
                 THEN 'N' 
                 ELSE 'Y' 
             END
             --nvl(s.reference_5, 'N')
        INTO l_regular_yn
        FROM is_pe01 p,
             is_sy02 s
       WHERE p.regulargb = s.codeid
         AND s.codetp = 'E108'
         AND p.emp_id = emp.emp_id;
         
         
급여인데 Y이다.          
IF g_paycd = '10' AND l_regular_yn = 'Y' THEN
    g_retire_check := FALSE;
    g_retire       := 'Y';
ELSIF g_paycd != '10' THEN
    g_retire_check := TRUE;
    g_retire       := 'Y';
ELSE
    g_retire_check := TRUE;
    g_retire       := 'N';
END IF;

-- TODO 해당 어떤 역할인지 추후 파악
l_regular_yn
g_retire_check
g_retire


