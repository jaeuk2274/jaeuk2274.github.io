급상여계산
main(errbuf            OUT NOCOPY VARCHAR2
,retcode           OUT NOCOPY NUMBER
,p_paycd           VARCHAR2 DEFAULT NULL -- 10 급여 30 경영성과금
,p_paydat          DATE DEFAULT NULL -- 지급일자
,p_paymth          VARCHAR2 DEFAULT NULL -- 귀속년월
,p_compycd         VARCHAR2 DEFAULT '1000' 
,p_deptcd          VARCHAR2 DEFAULT NULL 
,p_include_subdept VARCHAR2 DEFAULT NULL
,p_jikjgcd         VARCHAR2 DEFAULT NULL
,p_jikgubcd        VARCHAR2 DEFAULT NULL
,p_regulargb       VARCHAR2 DEFAULT NULL
,p_paydiv          VARCHAR2 DEFAULT NULL
,p_emp_id          NUMBER DEFAULT NULL
,p_pay_rate        NUMBER DEFAULT NULL
,p_pay_amount      NUMBER DEFAULT NULL
,p_tax_from        VARCHAR2 DEFAULT NULL
,p_tax_to          VARCHAR2 DEFAULT NULL
,p_duty_from       DATE DEFAULT NULL
,p_duty_to         DATE DEFAULT NULL
,p_tax_cal         VARCHAR2 DEFAULT 'N' 세액계산여부 Y
,p_tax_subrate     NUMBER DEFAULT 0)



    TYPE       my_curs_type is REF CURSOR;
    curs       my_curs_type;
    curs_str   VARCHAR2(3000);
    l_deptnm   VARCHAR2(100);
    l_cal_id   NUMBER;
    l_7b_amt   NUMBER;
    l_temp_9a  NUMBER;
    tsStartTime TIMESTAMP;


    IF g_calc_module IS NULL THEN
      g_calc_module := 'REAL_PAY'; -- 급여면 , 소급이면 RETA..
      g_req_type    := 'PAY_CALC';

    END IF;

write_log('급상여계산일시 : '||TO_CHAR(sysdate, 'RRRR-MM-DD HH24:MI:SS'));
write_log('');
write_log('계산조건 - 급상여구분 : '||IS_PAY_COMMON.PAYNM(p_paycd));

G101	00	급여상여	급여,분기,명절,성과상여금을 의미함
G101	10	급여	BVK
G101	20	정기상여	기본급+직능급+근속급+직책수당+중식비의 400%(1/4/7/10월 각 100%)
G101	21	기본상여	기본급+직능급+근속급+직책수당+중식비의 200%(2/8월 각 100%)
G101	22	월동비	기본급+직능급+근속급+직책수당+중식비의 100%(11월)
G101	23	체력단련비	기본급+직능급+근속급+직책수당+중식비의 100%(5월)
G101	24	명절상여	설, 추석 5일 전 지급(정액 500,000원)
G101	30	경영성과금	기본급+직능급+근속급+직책수당+중식비의 0~400%(3/6/9/12월)
G101	50	임원성과연봉	BVK
G101	60	소급분	
G101	68	영업활동비	부서장활동비 셋팅 동일
G101	69	현장활동비	직책활동비 셋팅 동일
G101	71	부서장활동비	BVK
G101	74	경영성과금_2	
G101	75	상무보성과연봉	
G101	76	직책활동비	
G101	77	특별격려금	
G101	78	업무추진비	
G101	80	기타소득	구_포상금(2013.06.10)
G101	81	근속포상	
G101	82	기술기여금	
G101	83	인정상여	
G101	84	숙소지원금	
G101	85	학자금	
G101	86	스마트폰지원금	
G101	89	장려금	2014-10-02 추가
G101	91	근속포상_2	
G101	92	퇴직포상	
G101	921	교육수당	
G101	922	노사상생수당	
G101	93	전문자격포상	
G101	94	재외수당	
G101	95	교육지원금	
G101	96	임원포상	
G101	97	기타포상금	
G101	98	임원장기인센티브	
G101	999	임원활동비	BVK
G101	A1	퇴직금	
G101	G1	연차충당	
G101	G2	퇴직충당(IFRS)	
G101	G3	퇴직충당(KGAPP)	
G101	X1	공탁	압류등록에서 사용
     
write_log('계산조건 - 지급일자 : '||TO_CHAR(p_paydat,'RRRR-MM-DD'));
write_log('계산조건 - 귀속년월 : '||p_paymth);


write_log('계산조건 - 부서 : '||l_deptnm);
write_log('계산조건 - 하위조직포함 : '||p_include_subdept);
write_log('계산조건 - 직급 : '||IS_FUNC.CODENM('E104', p_paydiv));
write_log('계산조건 - 직군 : '||IS_FUNC.CODENM('E108', p_paydiv));
write_log('계산조건 - 급여형태 : '||IS_FUNC.CODENM('E106', p_paydiv));
write_log('계산조건 - 사번 : '||IS_FUNC.EMPCD(p_emp_id)||' '||IS_FUNC.HNAME(p_emp_id));


코드, 지급일자, 귀속년월, 사업장 유효성검사

격려금의 겨우 세금계산기간 넣지 않으면 세금계산 x
20, 30, 50

세금계산기간 유효성검사

지급율, 지급액 유효성검사

지급률, 지급액 둘중하나

write_log('계산조건 - 지급율 : '||p_pay_rate);
write_log('계산조건 - 지급액 : '||p_pay_amount);
write_log('계산조건 - 세액계산기간 : '||p_tax_from||'-'||p_tax_to);

상여계산기간 있으면 
write_log('계산조건 - 상여계산기간 : '||TO_CHAR(p_duty_from,'RRRR-MM-DD')||'-'||TO_CHAR(p_duty_to,'RRRR-MM-DD'));

write_log('계산조건 - 세액계산여부 : '||p_tax_cal);
write_log('계산조건 - 세액감액율 : '||nvl(p_tax_subrate,0)||'%');


## 1. 통상시급을 구하기 위한 소정 근무시간 Setting
g_reg_time := to_number(is_duty_common.common_value('REGULAR_WORK_TIME')); 

    select *
    --  into l_value
      from is_sy03
     where name = upper('REGULAR_WORK_TIME')
       and type = 'GUNTAE'
       and org_id = is_func.org_id;
       
81	GUNTAE	REGULAR_WORK_TIME	184	소정근로시간


## 2. get_date_period; --급여계산기간  

SELECT VALUE$
INTO l_date_ftemp
FROM IS_SY03
WHERE NAME = 'BONUS_DILIGENCE_FROM'
AND TYPE = 'GUNTAE'
AND ORG_ID = 81;

급여기간
81	GUNTAE	BONUS_DILIGENCE_FROM	-1,16	급/상여시작일

SELECT VALUE$
INTO l_date_ttemp
FROM IS_SY03
WHERE NAME = 'BONUS_DILIGENCE_TO'
AND TYPE = 'GUNTAE'
AND ORG_ID = 81;

81	GUNTAE	BONUS_DILIGENCE_TO	0,15	급/상여종료일


IF (l_date_ftemp IS NOT NULL) THEN
l_date_fm := SUBSTR(l_date_ftemp, 1, INSTR(l_date_ftemp, ',') - 1); -- -1
l_date_fd := SUBSTR(l_date_ftemp, INSTR(l_date_ftemp, ',') + 1); -- 16
-- (귀속년월)저번달 마지막날 < 16
IF TO_CHAR(LAST_DAY(ADD_MONTHS(to_date(p_dutymth, 'yyyymm'), l_date_fm)), 'DD') < l_date_fd 
THEN
  p_date_from := LAST_DAY(ADD_MONTHS(to_date(p_dutymth, 'yyyymm'), l_date_fm));
ELSE
  p_date_from := TO_DATE(TO_CHAR(ADD_MONTHS(to_date(p_dutymth, 'yyyymm'), l_date_fm), 'YYYYMM') || 
                LTRIM(TO_CHAR(l_date_fd, '00')), 'YYYYMMDD'); -- (귀속년월)저번달 || 16
END IF;

IF (l_date_ttemp IS NOT NULL) THEN
l_date_tm := SUBSTR(l_date_ttemp, 1, INSTR(l_date_ttemp, ',') - 1); -- 0
l_date_td := SUBSTR(l_date_ttemp, INSTR(l_date_ttemp, ',') + 1); -- 15
-- (귀속년월)현재달 마지막날 < 15
IF TO_CHAR(LAST_DAY(ADD_MONTHS(to_date(p_dutymth, 'yyyymm'), l_date_tm)), 'DD') < l_date_td 
THEN
  p_date_to := LAST_DAY(ADD_MONTHS(to_date(p_dutymth, 'yyyymm'), l_date_tm));
ELSE
  p_date_to := TO_DATE(TO_CHAR(ADD_MONTHS(to_date(p_dutymth, 'yyyymm'), l_date_tm), 'YYYYMM') ||
               LTRIM(TO_CHAR(l_date_td, '00')), 'YYYYMMDD'); (귀속년월) || 15
END IF;

근태
저번달 16 ~ 이번달 15일 기준.

전월 급여기간도 구해놓는다.
g_prev_paymth := to_char(add_months(to_date(g_paymth,'rrrrmm'),-1),'RRRRMM');
is_month_common.bonus_period(g_prev_paymth, g_prev_pay_date_from, g_prev_pay_date_to);

g_prev_pay_date_from
g_prev_pay_date_to


  -- 일할계산 기준일
  g_day_per_monthly        NUMBER := TO_NUMBER(IS_PAY_COMMON.COMMON_VALUE('DAY_PER_MONTHLY')); -- 30

SELECT VALUE$
INTO l_value
FROM IS_SY03
WHERE NAME = upper('DAY_PER_MONTHLY')
AND TYPE = 'PAY'
AND ORG_ID = is_func.org_id;

81	PAY	DAY_PER_MONTHLY	30	일할계산 기준일


## 3. get_fixed_reg_type

CURSOR CS_REG_TYPE IS
SELECT REG_TYPE, MASTER_COLUMN
FROM IS_PY33
WHERE ENABLED = 'Y'
AND ORG_ID = g_org_id
ORDER BY PRECEDE_NUM;

개인별	EMP_ID
직책별	JIKCKCD
호칭별	JIKGUBCD

1	개인별	EMP_ID		Y	IS_PE01_V PER	PER.EMPCD	사번	        0.8	    PER.HNAME	    성명	        1.5	PER.DEPTCD_DISP	부서	2				TO_CHAR(PER.EMP_ID)			5	WHERE 1=1 ORDER BY PER.EMPCD
2	직책별	JIKCKCD		Y	IS_SY02 S	    S.CODEID	직책코드	  0.8	S.DESCRIPTION	직책코드명	    1.5										1	WHERE S.CODETP = 'E102' ORDER BY S.CODETP
3	호칭별	JIKGUBCD	Y	IS_SY02 S	    S.CODEID	호칭코드	  0.8	S.DESCRIPTION	호칭명	        1.5										1	WHERE S.CODETP = 'E104' ORDER BY S.CODETP

FOR C IN CS_REG_TYPE LOOP
  l_array := l_array + 1;
  reg_type(l_array).REG_TYPE := C.REG_TYPE;
  reg_type(l_array).MASTER_COLUMN := C.MASTER_COLUMN;
END LOOP;


## 4. 
    curs_str := get_curs_str(p_paymth
                            ,p_compycd
                            ,p_deptcd
                            ,p_include_subdept
                            ,p_jikjgcd
                            ,p_jikgubcd
                            ,p_regulargb
                            ,p_paydiv
                            ,p_emp_id);
                            
                            
l_7_day    DATE := last_day(add_months(to_date(g_paymth || '05', 'YYYYMMDD'), -1));
-> 바꿔도 될 거 같음. 전달 마지막날짜만 구함.
l_7_day    DATE := last_day(add_months(to_date(g_paymth, 'YYYYMM'), -1));
전달 마지막 날짜. 


l_ret_bns_st_date := add_months(g_pay_date_to,-1);
19.12.15   20.01.15

l_curs_str := 'SELECT * FROM IS_PE01 ';

2010 안씀
3010 안씀

g_pay_date_to = 20.01.15
40 격려금
1. 급여형태 인턴이고
2. 입사일자가 급여기간(20.01.15) 전
3. 퇴사일자가 급여기간(20.01.15) 이후 존재하면

l_curs_str := l_curs_str || 'WHERE  IGENTDAT <= ''' || g_pay_date_to || '''' ||
            'AND PAYDIV <> ''90''' || -- 인턴
            'AND  (RETDAT IS NULL OR RETDAT >= ''' || g_pay_date_to ||

IGENTDAT -> 입사일자
PAYDIV -> 급여형태(E106)
RETDAT -> 퇴사일자

E106	05	시급제			N
E106	10	월정액	2013.04.12 월급제 => 월정액		Y
E106	20	연봉제(직원)			Y
E106	30	연봉제(임원)			Y
E106	40	호봉제			Y
E106	70	연봉제(계약직)			N
E106	90	인턴(계약직)			N
E106	99	미지급			N



--통신비(75)       5일기준 재중인 직원
..? 75 어디서 따로 주는건지...  75코드 현재 상무보성과연봉임..


76 직책활동비
ELSIF g_paycd IN ('76') THEN
  l_curs_str := l_curs_str || 'WHERE  IGENTDAT <= ''' || g_pay_date_to || '''' ||
                'AND PAYDIV <> ''30''' ||
                'AND (RETDAT IS NULL OR RETDAT > ''' || l_7_day ||
                ''')';

1. 급여형태 연봉제(임원)이 아니고
2. 입사일자가 급여기간(20.01.15) 전
3. 퇴사일자가 전달 마지막 날짜(19.12.31)보다 크면. 이번달 퇴사면 안줌.


-- 2017.03.29 추가 69 공사파견활동비 ( 76 =  직책활동비랑 동일 )
ELSIF g_paycd IN ('69') THEN
  l_curs_str := l_curs_str || 'WHERE  IGENTDAT <= ''' || g_pay_date_to || '''' ||
                'AND PAYDIV <> ''30''' ||
                'AND (RETDAT IS NULL OR RETDAT > ''' || l_7_day ||
                
해당 두개합쳐도 무방 합침.

ELSIF g_paycd IN ('50', '70') THEN
--임원성과연봉,임원활동비
l_curs_str := l_curs_str || 'WHERE  IGENTDAT <= ''' || g_pay_date_to || '''' ||
            'AND  (RETDAT IS NULL OR RETDAT >= ''' || g_paydat ||
            ''')' || 'AND PAYDIV = ''30'''
             ;











